// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name BanubaLicenseServicingSDK
@_exported import BanubaLicenseServicingSDK
import Foundation
import Swift
import os.log
import os
public struct License : Swift.Equatable {
  public var clientId: Swift.String {
    get
  }
  public var supportsFaceAR: Swift.Bool {
    get
  }
  public var supportsPiP: Swift.Bool {
    get
  }
  public var supportsAudioBrowser: Swift.Bool {
    get
  }
  public var supportsBgSeparation: Swift.Bool {
    get
  }
  public var postProcessingEffects: [Swift.Int] {
    get
  }
  public var arCloudURL: Swift.String? {
    get
  }
  public var timeBomb: BanubaLicenseServicingSDK.TimeBomb? {
    get
  }
  public var supportsFHD: Swift.Bool {
    get
  }
  public static func == (lhs: BanubaLicenseServicingSDK.License, rhs: BanubaLicenseServicingSDK.License) -> Swift.Bool
  public static func getLicense(fromToken token: Swift.String) -> BanubaLicenseServicingSDK.License?
}
public struct TimeBomb : Swift.Codable, Swift.Equatable {
  public var yearBegin: Swift.Int, monBegin: Swift.Int, dayBegin: Swift.Int, yearEnd: Swift.Int
  public var monEnd: Swift.Int, dayEnd: Swift.Int
  public var isExpired: Swift.Bool {
    get
  }
  public static func == (a: BanubaLicenseServicingSDK.TimeBomb, b: BanubaLicenseServicingSDK.TimeBomb) -> Swift.Bool
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
